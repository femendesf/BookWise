// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model User {
  id               String   @id @default(uuid())
  email            String   @unique
  name             String?
  avatarUrl        String?
  createdAt        DateTime @default(now())
  pagesRead        Int
  reviewedBooks    Int
  totalAuthorsRead Int

  accounts          Account[]
  listBooksReviewed Post[]

  @@map("users")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Post {
  id     String @id @default(uuid())
  userId String
  cover  String
  title  String
  author String
  rating Int

  listReviews User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("posts")
}
