// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(uuid())
  email      String  @unique
  name       String?
  avatar_url String?

  created_at DateTime @default(now())

  totalBookRead     Int?
  last_synced_books DateTime?

  account Account[]
  reviews Review[] // Adicionado: Um usuário pode ter várias avaliações
  session Session[]

  @@map("users")
}

model Account {
  id                  String  @id @default(uuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user User @relation(fields: [user_id], references: [id])

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(uuid())
  session_token String   @unique @map("session_token")
  user_id       String   @map("user_id")
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Book {
  id        String   @id @default(uuid())
  title     String
  author    String
  cover_url String
  pages     Int?
  category  String? // Mudado para String? ou String
  rating    Float
  reviews   Review[]

  @@unique([title, author])
  @@map("books")
}

model Review {
  id         String   @id @default(uuid())
  user_id    String
  book_id    String
  rating     Int
  comment    String? // O comentário da avaliação
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  book Book @relation(fields: [book_id], references: [id], onDelete: Cascade)

  @@map("reviews")
}
